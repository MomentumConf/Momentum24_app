name: 'Build and Deploy Flutter Web App'
description: 'Builds and deploys a Flutter web app to Vercel'

inputs:
  sanity_project_id:
    description: 'Sanity Project ID'
    required: true
  onesignal_appid:
    description: 'OneSignal App ID'
    required: true
  vercel_token:
    description: 'Vercel Token'
    required: true
  vercel_org_id:
    description: 'Vercel Organization ID'
    required: true
  vercel_project_id:
    description: 'Vercel Project ID'
    required: true
  sentry_dsn:
    description: 'Sentry DSN'
    required: true
  is_pull_request:
    description: 'Whether this is a pull request'
    required: true
  pr_number:
    description: 'Pull request number'
    required: false
    default: ''

outputs:
  deployment_url:
    description: 'The URL of the deployed application'
    value: ${{ steps.deploy.outputs.url }}

runs:
  using: 'composite'
  steps:
    - name: Set up Flutter actions
      uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.29"
        channel: stable

    - name: Install dependencies
      run: flutter pub get
      shell: bash

    # Build and deploy with vercel
    - name: Prepare yarn v2
      run: |
        corepack enable
        yarn set version stable
      shell: bash

    - name: Create settings.json file
      run: curl https://${{ inputs.sanity_project_id }}.api.sanity.io/v2022-03-07/data/query/production?query=*%5B_type+%3D%3D+%22settings%22%5D%5B0%5D+%7B%0A++appName%2C%0A++description%2C%0A++%22appIcon%22%3A+appIcon.asset-%3Eurl%2C%0A++%22logo%22%3A+logo.asset-%3Eurl%2C%0A++%22speakersTileImage%22%3A+speakersTileImage.asset-%3Eurl%2C%0A++%22songsTileImage%22%3A+songsTileImage.asset-%3Eurl%2C%0A++%22regulationsTileImage%22%3A+regulationsTileImage.asset-%3Eurl%2C%0A++%22mainColor%22%3A+mainColor.hex%2C%0A++%22secondaryColor%22%3A+secondaryColor.hex%2C%0A++%22textColor%22%3A+textColor.hex%2C%0A++%22highlightColor%22%3A+highlightColor.hex%2C%0A++enabledModules%2C%0A++%22analyticsId%22%3A+2%2C%0A%7D | jq '.result' > settings.json
      shell: bash

    - name: Prepare application
      env:
        SANITY_PROJECT_ID: ${{ inputs.sanity_project_id }}
        ONESIGNAL_APPID: ${{ inputs.onesignal_appid }}
      run: bash prepare_app.sh
      shell: bash

    - name: Build with Vercel using NPX
      env:
        VERCEL_TOKEN: ${{ inputs.vercel_token }}
        VERCEL_ORG_ID: ${{ inputs.vercel_org_id }}
        VERCEL_PROJECT_ID: ${{ inputs.vercel_project_id }}
        SANITY_PROJECT_ID: ${{ inputs.sanity_project_id }}
        SENTRY_DSN: ${{ inputs.sentry_dsn }}
      run: npx vercel pull --yes --token ${{ inputs.vercel_token }} && YARN_ENABLE_IMMUTABLE_INSTALLS=false npx vercel build ${{ inputs.is_pull_request == 'true' && '' || '--prod'}} --token ${{ inputs.vercel_token }}
      shell: bash

    - name: Change SW to cache everything on install
      run: |
        sed -i 's/caches.open(TEMP).then((cache) => {/caches.open(CACHE_NAME).then((cache) => {/' .vercel/output/static/flutter_service_worker.js
        sed -i 's/CORE\.map((value) => new Request(value, {'\''cache'\'': '\''reload'\''})))/Object.keys(RESOURCES)/g' .vercel/output/static/flutter_service_worker.js
      shell: bash

    - name: Deploy prebuilt with Vercel
      id: deploy
      env:
        VERCEL_TOKEN: ${{ inputs.vercel_token }}
        VERCEL_ORG_ID: ${{ inputs.vercel_org_id }}
        VERCEL_PROJECT_ID: ${{ inputs.vercel_project_id }}
      run: |
        npx vercel deploy ${{ inputs.is_pull_request == 'true' && '' || '--prod'}} --prebuilt --token ${{ inputs.vercel_token }} &> deploy.log
        cat deploy.log
        echo "url=$(grep -m1 -o 'https://[a-zA-Z0-9-]*.vercel.app' deploy.log)" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Comment Pull Request with URL
      if: inputs.is_pull_request == 'true'
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: |
          :rocket: Deployed to Vercel Preview URL: ${{ steps.deploy.outputs.url }}
        GITHUB_TOKEN: ${{ github.token }}
        pr_number: ${{ inputs.pr_number }} 